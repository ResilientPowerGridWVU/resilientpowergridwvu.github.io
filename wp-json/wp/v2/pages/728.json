{"id":728,"date":"2021-11-18T16:08:01","date_gmt":"2021-11-18T16:08:01","guid":{"rendered":"https:\/\/anslegal.in\/wsu\/?page_id=728"},"modified":"2021-11-18T16:08:03","modified_gmt":"2021-11-18T16:08:03","slug":"pycanvass","status":"publish","type":"page","link":"https:\/\/anslegal.in\/wsu\/pycanvass\/","title":{"rendered":"PyCanvass"},"content":{"rendered":"\n<figure class=\"wp-block-image is-style-twentytwentyone-border\"><img src=\"https:\/\/sgdril.eecs.wsu.edu\/wp-content\/uploads\/2021\/05\/pycanvass.png\" alt=\"\" class=\"wp-image-666\"\/><\/figure>\n\n\n\n<p>CANVASS stands for Cyber Attacks and Network Vulnerability Analytics Software for Smart Grids. py-CANVASS is a Python-based free and open source library for computing resiliency of Smart Grid and power systems critical infrastructure. It has a unique resiliency computation engine, and it enables integration with other industry-standard power system simulation software like GridLAB-D, and Real-Time Digital Simulators.<\/p>\n\n\n\n<figure class=\"wp-block-image is-style-twentytwentyone-border\"><img src=\"https:\/\/sgdril.eecs.wsu.edu\/wp-content\/uploads\/2021\/05\/pycanvass1.png\" alt=\"\" class=\"wp-image-668\"\/><\/figure>\n\n\n\n<p>PyCanvass is under active development in SGDRIL at Washington State University. The project is hosted on Github:&nbsp;<a href=\"https:\/\/github.com\/sayonsom\/pycanvass\">https:\/\/github.com\/sayonsom\/pycanvass<\/a><\/p>\n\n\n\n<p>If you have any questions, or find bugs \u2013 please email Sayonsom Chanda:&nbsp;<a href=\"mailto:sayon@ieee.org\">sayon@ieee.org<\/a><\/p>\n\n\n\n<h2>Typical Use-Cases<\/h2>\n\n\n\n<ul><li>Easy power system modeling \u2013 you can use it to quickly build GridLAB-D Models.<\/li><li>Data-driven Disaster response design (through reconfiguration algorithms)<\/li><li>Cyber-physical power grid simulations<\/li><li>Resource optimization during extreme events<\/li><li>Resiliency computation (also, design your own resiliency metric)<\/li><li>Connect with digital real-time simulators, like RTDS, Opal-RT.<\/li><li>Simulate cyber attacks for education\/research purposes<\/li><\/ul>\n\n\n\n<h2>Installation<\/h2>\n\n\n\n<h4>Using pip<\/h4>\n\n\n\n<p>These installations are stable and well-supported. The most preferred way of installing PyCanvass is using pip:<\/p>\n\n\n\n<p>pip install pycanvass<\/p>\n\n\n\n<p>If you have previously installed PyCanvass, it is recommended to frequently.<\/p>\n\n\n\n<p>pip uninstall pycanvass<\/p>\n\n\n\n<p>pip install \u2013upgrade pycanvass<\/p>\n\n\n\n<h4>Build Your Own<\/h4>\n\n\n\n<p>These installations have the freshest code, but it may contain bugs. Please follow the steps:<\/p>\n\n\n\n<ol><li>Download this repository as a Zip file.<\/li><li>Extract it to a location of your choice.<\/li><li>Change directory to the folder in Command Prompt, and run.<\/li><\/ol>\n\n\n\n<p>python setup.py install Assumes you have Python installed and already set to your path.<\/p>\n\n\n\n<h2>Getting Started Guide<\/h2>\n\n\n\n<p>[Full documentation is coming soon]&nbsp;<em>Your first pyCanvass program<\/em>&nbsp;We try to make this library accessible to non-programmers, programming beginners, non-power engineers, as well as the most hardened software-professionals. Feel free to read in detail of each step, or skip \u2013 as appropriate for your skill-level.<\/p>\n\n\n\n<ul><li>Make sure you have the latest versions of pyCanvass, Python, and GridLAB-D installed correctly.<\/li><li>Create a new folder, and inside that include a user_preferences.json file, and project_config.json file. Examples of these are in the demo-data.<\/li><li>Also download the example node-file.csv, node-file.csv, and threat-file.csv \u2013 and keep them in the same folder.<\/li><li>Using any text editor (like Notepad++ or VS Code or Sublime Text), open the project_config.json file.<\/li><li>Edit the data section of the project_config file, replacing the paths mentioned in the nodes, edges, and threat section of the file with the file path of where you just placed the node-file.csv, edge-file.csv, and threat-file.csv.<\/li><li>In your text editor, open a new file and save as \u201cmymodel.py\u201d<\/li><li>In mymodel.py, write:from pycanvass.all import * project, nodes, edges = load_project()<\/li><li>Now you are ready to perform network Vulnerability analysis. If you want to find the least risk path, i.e. the most resilient path, from a node, say F1_2 in the node-file.csv in the sample to another node, F2_3, just add the following code to your program above:<\/li><li>paths = path_search(mygraph, \u2018F1_2\u2019, \u2018F2_3\u2019, criterion=\u201dleast_risk\u201d) print(paths)<\/li><\/ul>\n\n\n\n<h2>Citation<\/h2>\n\n\n\n<p>If you use PyCanvass in your simulations, please cite the library in your work. The citation helps other researchers who are not familiar with PyCanvass to easily reproduce results of your work, thus increasing the credibility and re-usability of your work. Also, we will soon release a website that features different papers that have used PyCanvass. Please let us know so that we can help increase the visibility of your work by featuring it on our website.<\/p>\n\n\n\n<ul><li>S. Chanda, A. Srivastava, R. Hovsapian, \u201cpycanvass: an Open Source Cyber-Attack and Network Vulnerability Assessment Tool for Resiliency Analysis of Distribution Systems\u201d, IEEE Trans. Smart Grid (to be submitted)<\/li><\/ul>\n\n\n\n<h2>Resources<\/h2>\n\n\n\n<h4>GitHub<\/h4>\n\n\n\n<figure class=\"wp-block-embed\"><div class=\"wp-block-embed__wrapper\">\nhttps:\/\/github.com\/sayonsom\/pycanvass\n<\/div><\/figure>\n\n\n\n<h4>Videos<\/h4>\n\n\n\n<p>Canvass \u2013 Intro Video<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Canvass - Intro Video\" width=\"750\" height=\"422\" src=\"https:\/\/www.youtube.com\/embed\/Vrm5RCVMseA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>PyCanvass \u2013 An easy open-source tool resiliency simulations of power distribution systems<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"PyCanvass - An easy open-source tool resiliency simulations of power distribution sytems\" width=\"750\" height=\"422\" src=\"https:\/\/www.youtube.com\/embed\/ybwCLNTrps0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>How to measure resiliency of power grid using CANVASS before a hurricane? <\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"How to measure resiliency of power grid using CANVASS before a hurricane?\" width=\"750\" height=\"422\" src=\"https:\/\/www.youtube.com\/embed\/mMu452dKgbg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<h2>Community Contribution<\/h2>\n\n\n\n<p>There are many ways you help us.<\/p>\n\n\n\n<ul><li>If you find some errors and bugs, please let us know.<\/li><li>Submit feature requests.<\/li><li>Submit pull requests with your own additions and contributions.<\/li><\/ul>\n\n\n\n<h4>Social<\/h4>\n\n\n\n<ul><li>Cite PyCanvass in your research.<\/li><li>Give us a \u201cStar\u201d on GitHub.<\/li><li>Share the project on LinkedIn, Twitter, Facebook, and write about us in your blogs.<\/li><li>Subscribe to our channel, comment and share PyCanvass Videos on YouTube.<\/li><\/ul>\n\n\n\n<h2>Contact<\/h2>\n\n\n\n<p>Email:&nbsp;<a href=\"mailto:sayon@ieee.org\">sayon@ieee.org<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>CANVASS stands for Cyber Attacks and Network Vulnerability Analytics Software for Smart Grids. py-CANVASS is a Python-based free and open source library for computing resiliency of Smart Grid and power systems critical infrastructure. It has a unique resiliency computation engine, and it enables integration with other industry-standard power system simulation software like GridLAB-D, and Real-Time&hellip; <a class=\"more-link\" href=\"https:\/\/anslegal.in\/wsu\/pycanvass\/\">Continue reading <span class=\"screen-reader-text\">PyCanvass<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/pages\/728"}],"collection":[{"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/comments?post=728"}],"version-history":[{"count":1,"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/pages\/728\/revisions"}],"predecessor-version":[{"id":732,"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/pages\/728\/revisions\/732"}],"wp:attachment":[{"href":"https:\/\/anslegal.in\/wsu\/wp-json\/wp\/v2\/media?parent=728"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}